// Generated by CoffeeScript 1.6.3
(function() {
  var icalDateToUTC, moment, time;

  time = require('time');

  moment = require('moment');

  icalDateToUTC = function(date, tzid) {
    var isUTC, mdate, tdate;
    isUTC = date[date.length - 1] === 'Z';
    mdate = moment(date, "YYYYMMDDTHHmm00");
    if (isUTC) {
      tdate = new time.Date(mdate, 'UTC');
    } else {
      tdate = new time.Date(mdate, tzid);
      tdate.setTimezone('UTC');
    }
    return tdate;
  };

  module.exports = function(Event) {
    var VCalendar, VEvent, _ref;
    _ref = require('./index'), VCalendar = _ref.VCalendar, VEvent = _ref.VEvent;
    Event.prototype.toIcal = function(timezone) {
      var endDate, event, startDate;
      if (timezone == null) {
        timezone = "UTC";
      }
      startDate = new time.Date(this.start);
      endDate = new time.Date(this.end);
      startDate.setTimezone(timezone, false);
      endDate.setTimezone(timezone, false);
      event = new VEvent(startDate, endDate, this.description, this.place, this.id, this.details);
      if (this.rrule) {
        event.fields['RRULE'] = this.rrule;
      }
      return event;
    };
    Event.fromIcal = function(vevent, timezone) {
      var endDate, event, startDate;
      if (timezone == null) {
        timezone = "UTC";
      }
      event = new Event();
      event.description = vevent.fields["SUMMARY"] || vevent.fields["DESCRIPTION"];
      event.details = vevent.fields["DESCRIPTION"] || vevent.fields["SUMMARY"];
      event.place = vevent.fields["LOCATION"];
      event.rrule = vevent.fields["RRULE"];
      startDate = icalDateToUTC(vevent.fields["DTSTART"], vevent.fields["DTSTART-TZID"] || timezone);
      endDate = icalDateToUTC(vevent.fields["DTEND"], vevent.fields["DTEND-TZID"] || timezone);
      event.start = startDate.toString().slice(0, 24);
      event.end = endDate.toString().slice(0, 24);
      return event;
    };
    return Event.extractEvents = function(component, timezone) {
      var events;
      events = [];
      component.walk(function(component) {
        if (component.name === 'VEVENT') {
          return events.push(Event.fromIcal(component, timezone));
        }
      });
      return events;
    };
  };

}).call(this);
